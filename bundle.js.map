{"version":3,"sources":["webpack:///webpack/bootstrap 3210b60de4271582e797","webpack:///./lib/board.js","webpack:///./lib/game.js","webpack:///./lib/main.jsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;AC3BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3210b60de4271582e797","class Board {\n  constructor() {\n    this.canvas = document.getElementById('testCanvas');\n    // create stage and point it to the canvas:\n    this.stage = new createjs.Stage('testCanvas');\n\n  \tthis.mouseTarget;\t// the display object currently under the mouse, or being dragged\n  \tthis.dragStarted;\t// indicates whether we are currently in a drag operation\n  \tthis.offset;\n  \tthis.update = true;\n\n\t  createjs.Touch.enable(this.stage);\n\t// enabled mouse over / out events\n\t\tthis.stage.enableMouseOver(10);\n\t\tthis.stage.mouseMoveOutside = true; // keep tracking the mouse even when it leaves the canvas\n\t// load the source image:\n\t\tthis.image = new Image();\n\t\tthis.image.src = \"./../book.png\";\n  }\n\n  setUpRound() {\n\t\tconst container = new createjs.Container();\n\t\tconst hints = [\"Said in 1776\", \"He owned slaves\", \"From Virginia\"]\n\t\t  for (var i = 0; i < 3; i++) {\n\t\t\t  let text = new createjs.Text();\n  \t\t\ttext.font = \"20px Arial\";\n  \t\t\ttext.x = this.canvas.width * Math.random() | 0;\n  \t\t\ttext.y = this.canvas.height * Math.random() | 0;\n  \t\t\ttext.text = hints[i];\n  \t\t\tthis.stage.addChild(text);\n\t\t  }\n      this.stage.update();\n    this.stage.addChild(container);\n\n  \tfor (var i = 0; i < 30; i++) {\n  \t\tlet bitmap = new createjs.Bitmap(this.image);\n  \t\tcontainer.addChild(bitmap);\n  \t\tbitmap.x = .9 * (this.canvas.width) * Math.random() | 0;\n  \t\tbitmap.y = .9 * this.canvas.height * Math.random() | 0;\n  \t\tbitmap.rotation = 360 * Math.random() | 0;\n  \t\tbitmap.regX = bitmap.image.width / 2 | 0;\n  \t\tbitmap.regY = bitmap.image.height / 2 | 0;\n  \t\tbitmap.scaleX = bitmap.scaleY = bitmap.scale = Math.random() * 0.4 + 0.6;\n  \t\tbitmap.name = \"bmp_\" + i;\n  \t\tbitmap.cursor = \"pointer\";\n  \t\t// assign the hit area:\n  \t\t// bitmap.hitArea = hitArea;\n  \t\tbitmap.addEventListener(\"mousedown\", function (evt) {\n  \t\t\t// bump the target in front of its siblings:\n  \t\t\tvar o = evt.target;\n  \t\t\to.parent.addChild(o);\n  \t\t\to.offset = {x: o.x - evt.stageX, y: o.y - evt.stageY};\n  \t\t}.bind(this));\n  \t\t// the pressmove event is dispatched when the mouse moves after a mousedown on the target until the mouse is released.\n  \t\tbitmap.addEventListener(\"pressmove\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.x = evt.stageX + o.offset.x;\n  \t\t\to.y = evt.stageY + o.offset.y;\n  \t\t\t// indicate that the stage should be updated on the next tick:\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t\tbitmap.addEventListener(\"rollover\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.scaleX = o.scaleY = o.scale * 1.2;\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t\tbitmap.addEventListener(\"rollout\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.scaleX = o.scaleY = o.scale;\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t}\n    this.stage.update();\n  \tcreatejs.Ticker.addEventListener(\"tick\", this.tick.bind(this));\n  }\n\n  stop() {\n\t   createjs.Ticker.removeEventListener(\"tick\", this.tick.bind(this));\n  }\n//\n  tick(event) {\n\t// this set makes it so the stage only re-renders when an event handler indicates a change has happened.\n\t  if (this.update) {\n\t\t  this.update = false; // only update once\n\t\t  this.stage.update(event);\n\t  }\n  }\n\n  displayWin() {\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(200,100,200,200,10,10,10,10);\n    this.stage.addChild(roundRect);\n    this.stage.update();\n  }\n}\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 0\n// module chunks = 0","\nclass Game {\n  constructor(board) {\n    //check to see if we are running in a browser with touch support\n    // create stage and point it to the canvas:\n    this.stage = board.stage;\n    debugger;\n    this.answer = document.getElementById(\"answer\");\n    this.answer.onchange = this.evaluateGuess.bind(this);\n  }\n\n  play() {\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(200,100,200,200,10,10,10,10);\n    this.stage.setChildIndex( roundRect, this.stage.getNumChildren()-1);\n    this.stage.addChild(roundRect);\n    this.stage.update();\n  }\n\n  evaluateGuess() {\n    if (this.answer.value === 'Thomas Jefferson' || this.answer.value === 'Jefferson') {\n      board.displayWin();\n    }\n  }\n\n\n}\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Board = require('./board');\nconst Game = require('./game');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let board = new Board();\n  let game = new Game(board);\n  board.setUpRound();\n  // game.play();\n  window.canvas = document.getElementById('testCanvas');\n  window.stage = board.stage;\n  // init();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.jsx\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}