{"version":3,"sources":["webpack:///webpack/bootstrap 540e5a20ec2120059f86","webpack:///./lib/board.js","webpack:///./lib/game.js","webpack:///./lib/main.jsx","webpack:///./lib/timer.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;ACtLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AChBD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA,OAAO;AACP,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 540e5a20ec2120059f86","class Board {\n  constructor() {\n    this.canvas = document.getElementById('testCanvas');\n    // create stage and point it to the canvas:\n    this.stage = new createjs.Stage('testCanvas');\n    this.reaction;\n  \tthis.mouseTarget;\t// the display object currently under the mouse, or being dragged\n  \tthis.dragStarted;\t// indicates whether we are currently in a drag operation\n  \tthis.offset;\n  \tthis.update = true;\n\n\t  createjs.Touch.enable(this.stage);\n\t// enabled mouse over / out events\n\t\tthis.stage.enableMouseOver(10);\n\t\tthis.stage.mouseMoveOutside = true; // keep tracking the mouse even when it leaves the canvas\n\t// load the source image:\n\t\tthis.image = new Image();\n\t\tthis.image.src = \"./book.png\";\n  }\n\n  setUpRound(round, hints) {\n\t\tconst container = new createjs.Container();\n\t\t  for (var i = 0; i < 3; i++) {\n\t\t\t  let text = new createjs.Text();\n  \t\t\ttext.font = \"18px Arial\";\n  \t\t\ttext.x = this.canvas.width * Math.random() | 0;\n  \t\t\ttext.y = this.canvas.height * Math.random() | 0;\n  \t\t\ttext.text = hints[i];\n  \t\t\tthis.stage.addChild(text);\n\t\t  }\n      this.stage.update();\n    this.stage.addChild(container);\n\n  \tfor (var i = 0; i < 30; i++) {\n  \t\tlet bitmap = new createjs.Bitmap(this.image);\n  \t\tcontainer.addChild(bitmap);\n  \t\tbitmap.x = .9 * this.canvas.width * Math.random() | 0;\n  \t\tbitmap.y = .9 * this.canvas.height * Math.random() | 0;\n  \t\tbitmap.rotation = 360 * Math.random() | 0;\n  \t\tbitmap.regX = bitmap.image.width / 2 | 0;\n  \t\tbitmap.regY = bitmap.image.height / 2 | 0;\n  \t\tbitmap.scaleX = bitmap.scaleY = bitmap.scale = Math.random() * 0.4 + 0.6;\n  \t\tbitmap.name = \"bmp_\" + i;\n  \t\tbitmap.cursor = \"pointer\";\n  \t\t// assign the hit area:\n  \t\t// bitmap.hitArea = hitArea;\n  \t\tbitmap.addEventListener(\"mousedown\", function (evt) {\n  \t\t\t// bump the target in front of its siblings:\n  \t\t\tvar o = evt.target;\n  \t\t\to.parent.addChild(o);\n  \t\t\to.offset = {x: o.x - evt.stageX, y: o.y - evt.stageY};\n  \t\t}.bind(this));\n  \t\t// the pressmove event is dispatched when the mouse moves after a mousedown on the target until the mouse is released.\n  \t\tbitmap.addEventListener(\"pressmove\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.x = evt.stageX + o.offset.x;\n  \t\t\to.y = evt.stageY + o.offset.y;\n  \t\t\t// indicate that the stage should be updated on the next tick:\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t\tbitmap.addEventListener(\"rollover\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.scaleX = o.scaleY = o.scale * 1.2;\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t\tbitmap.addEventListener(\"rollout\", function (evt) {\n  \t\t\tvar o = evt.target;\n  \t\t\to.scaleX = o.scaleY = o.scale;\n  \t\t\tthis.update = true;\n  \t\t}.bind(this));\n  \t}\n    this.stage.update();\n  \tcreatejs.Ticker.addEventListener(\"tick\", this.tick.bind(this));\n  }\n\n  stop() {\n\t   createjs.Ticker.removeEventListener(\"tick\", this.tick.bind(this));\n  }\n//\n  tick(event) {\n\t// this set makes it so the stage only re-renders when an event handler indicates a change has happened.\n\t  if (this.update) {\n\t\t  this.update = false; // only update once\n\t\t  this.stage.update(event);\n\t  }\n  }\n\n  displayWin(speaker) {\n    this.reaction = new createjs.Container();\n    let winText = new createjs.Text();\n    winText.font = \"20px Arial\";\n    winText.x = 245;\n    winText.y = 310;\n    winText.color = \"#FFFFFF\";\n    winText.text = `You're right. ${speaker} said it.\\n\\nPress enter for next round`;\n\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(240,300,420,100,10,10,10,10);\n    this.reaction.addChild(roundRect);\n    this.reaction.addChild(winText);\n    // container.addChild(enterText);\n    this.stage.addChild(this.reaction);\n    this.stage.update();\n    if (this.update) {\n      this.update = false; // only update once\n    }\n    //\n  }\n\n  incorrectGuess() {\n    this.reaction = new createjs.Container();\n    let winText = new createjs.Text();\n    winText.font = \"20px Arial\";\n    winText.x = 255;\n    winText.y = 325;\n    winText.color = \"#FFFFFF\";\n    winText.text = \"You're incorrect\\n\\nKeep guessing or press enter for next round\";\n\n\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(240,300,420,100,10,10,10,10);\n    this.reaction.addChild(roundRect);\n    this.reaction.addChild(winText);\n    // container.addChild(enterText);\n    this.stage.addChild(this.reaction);\n    this.stage.update();\n    if (this.update) {\n      this.update = false; // only update once\n    }\n  }\n\n  displayQuote(round) {\n    const quoteContainer = new createjs.Container();\n    let quote = new createjs.Text();\n    quote.font = \"20px Arial\";\n    quote.x = 110;\n    quote.y = 125;\n    quote.color = \"#FFFFFF\";\n    quote.text = this.quotes[round];\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(100,50,500,100,10,10,10,10);\n    quoteContainer.addChild(roundRect);\n    quoteContainer.addChild(quote);\n    // container.addChild(enterText);\n    this.stage.addChild(quoteContainer);\n    this.stage.update();\n  }\n}\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 0\n// module chunks = 0","const Timer = require('./timer');\n\nclass Game {\n  constructor(board, timer) {\n    //check to see if we are running in a browser with touch support\n    // create stage and point it to the canvas:\n    this.board = board;\n    this.stage = this.board.stage;\n    this.answer = document.getElementById(\"answer\");\n    this.canvas = document.getElementById('testCanvas');\n    this.timer = timer;\n    this.round = 0;\n    this.hints = [\n      [\"Known as the Great One\", \"Canadian Hockey Player\", \"His daughter Paulina!\"],\n      [\"Senator from Massachusetts\", \"Face of the 1960s\", \"Captained PT109\"],\n      [\"British Prime Minister\", \"World War II Leader\", \"Pudgy face\"],\n      [\"Born in Stratford-upon-Avon\", \"Wrote 38 plays\", \"The GOAT of Theater\"],\n      [\"Has self-titled $700 sneakers\", \"College Dropout...was he?\", \"Kim Kardashian's hubby\"]\n\n    ];\n    this.answers = [\n    \"Wayne Gretzky\",\n    \"John Kennedy\",\n    \"Winston Churchill\",\n    \"William Shakespeare\",\n    \"Kanye West\"\n\n                    ];\n    this.quotes = [\n      \"You miss 100% of the shots you don't take\",\n      \"My fellow Americans, ask not what your country can \\n\\n\"\n      + \"do for you, ask what you can do for your country\",\n      \"He has all the virtues I dislike and none of the vices \\n\\n\"\n      + \"I admire.\",\n      \"All the world's a stage, and all the men and women merely players\\n\\n\"\n      + \"they have their exits and their entrances; and one man in his time plays many parts\",\n      \"Life is like a box of chocolate, my momma told go to school and get my doctorate\"\n    ];\n    // this.board.displayQuote();\n    this.score = 0;\n    this.answer.oninput=this.evaluateGuess.bind(this);\n\n  }\n\n  displayQuote() {\n    this.board.displayQuote();\n  }\n\n  showTitle() {\n    const titleContainer = new createjs.Container();\n    let title = new createjs.Text();\n    title.font = \"20px Arial\";\n    title.x = 210;\n    title.y = 125;\n    title.color = \"#FFFFFF\";\n    title.text = \"Press any key or click the mouse\\n\\nBasically do anything to play!\";\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"#aaaaaa\").drawRoundRect(200,100,500,300,10,10,10,10);\n    titleContainer.addChild(roundRect);\n    titleContainer.addChild(title);\n    // container.addChild(enterText);\n    this.stage.addChild(titleContainer);\n    this.stage.update();\n\n    this.canvas.onmousedown = function(e) {\n      this.stage.removeChild(titleContainer);\n      this.stage.update();\n      this.displayInstructions();\n    }.bind(this);\n  }\n\n  displayInstructions() {\n    const instructionsContainer = new createjs.Container();\n    let instructions = new createjs.Text();\n    instructions.font = \"20px Arial\";\n    instructions.x = 210;\n    instructions.y = 125;\n    instructions.color = \"#FFFFFF\";\n    instructions.text = \"Here's how it works...\\n\\n\" +\n    \"We'll give you a quote. Type in the speaker.\\n\\n\" +\n    \"We'll be generous. Last name is good enough.\\n\\n\" +\n    \"If you don't know, move the books to reveal hints\";\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(200,100,500,300,10,10,10,10);\n    instructionsContainer.addChild(roundRect);\n    instructionsContainer.addChild(instructions);\n    // container.addChild(enterText);\n    this.stage.addChild(instructionsContainer);\n    this.stage.update();\n    // this.gameStart = () => {\n    //   this.stage.removeChild(instructionsContainer);\n    //   this.stage.update();\n    //   this.play();\n    // };\n\n    this.canvas.onmousedown = function(e) {\n      this.stage.removeChild(instructionsContainer);\n      this.stage.update();\n      this.timer.startTimer();\n      this.play();\n    }.bind(this);\n\n  }\n\n  play() {\n    if(this.round === 5) {\n      this.displayScoreCard();\n      return;\n    }\n    this.canvas.onmousedown = null;\n    this.board.setUpRound(this.round, this.hints[this.round]);\n    this.displayQuote(this.round);\n    this.answer.onkeydown = function(e) {\n      if (e.keyCode === 13) {\n        this.stage.removeAllChildren();\n        this.stage.update();\n        this.round += 1;\n        this.play();\n      }\n    }.bind(this);\n  }\n\n  displayQuote() {\n    const quoteContainer = new createjs.Container();\n    let quote = new createjs.Text();\n    quote.font = \"20px Arial\";\n    quote.x = 210;\n    quote.y = 80;\n    quote.color = \"#FFFFFF\";\n    quote.text = this.quotes[this.round];\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(200,70,500,100,10,10,10,10);\n    quoteContainer.addChild(roundRect);\n    quoteContainer.addChild(quote);\n    // container.addChild(enterText);\n    this.stage.addChild(quoteContainer);\n    this.stage.update();\n  }\n\n  evaluateGuess(e) {\n    e.preventDefault();\n    if (this.answer.value.toLowerCase() === (this.answers[this.round]).toLowerCase() ||\n        this.answer.value.toLowerCase() === (this.answers[this.round].split(\" \")[1]).toLowerCase()) {\n        this.board.displayWin(this.answers[this.round]);\n        this.score += 1;\n        this.answer.value = \"\";\n    }\n    else {\n      this.board.incorrectGuess();\n    }\n  }\n\n  displayScoreCard() {\n    const scoreContainer = new createjs.Container();\n    let score = new createjs.Text();\n    score.font = \"20px Arial\";\n    score.x = 210;\n    score.y = 80;\n    score.color = \"#FFFFFF\";\n    score.text = `You scored ${this.score} points`;\n    if(this.score >= 4) {\n      score.text = score.text + \"!\\n\\nThat's really good. You don't need to hit the books.\"\n      + \"\\n\\nOr actually, you probably already did in the past\";\n    } else if (this.score >= 2){\n      score.text = score.text + \"\\n\\nThat's mediocre. Be better than mediocre.\\n\\n\"\n      + \"Pick up a book, not just Facebook. Sorry for preachiness.\";\n    } else if (this.score === 1){\n      score.text = score.text + \"\\n\\nUmmm...c'mon, did you really try?\"\n    } else {\n      score.text = score.text + \"\\n\\nC'mon, you didn't know the JFK one?\"\n    }\n    var roundRect = new createjs.Shape();\n    roundRect.graphics.beginFill(\"black\").drawRoundRect(200,50,500,350,10,10,10,10);\n    scoreContainer.addChild(roundRect);\n    scoreContainer.addChild(score);\n    // container.addChild(enterText);\n    this.stage.addChild(scoreContainer);\n    this.stage.update();\n  }\n\n\n}\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Board = require('./board');\nconst Game = require('./game');\nconst Timer = require('./timer');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.scroll(0, 300);\n  let board = new Board();\n  let timer = new Timer(50);\n  let game = new Game(board, timer);\n\n  // game.showTitle();\n    game.showTitle();\n  // game.play();\n  window.canvas = document.getElementById('testCanvas');\n  window.stage = board.stage;\n  // init();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.jsx\n// module id = 2\n// module chunks = 0","class Timer {\n  constructor() {\n    document.getElementById(\"timer\").innerHTML = \"\";\n  }\n\n  startTimer() {\n// Set the date we're counting down to\n    const startDate = Date.now();\n\n    // Update the count down every 1 second\n    const x = setInterval(function() {\n      // Get todays date and time\n      let now = new Date().getTime();\n\n      // Find the distance between now an the count down date\n      let distance = now - startDate;\n\n      // Time calculations for days, hours, minutes and seconds\n      let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      if (minutes < 1) {\n        minutes = \"00\";\n      } else if (minutes >= 1 && minutes <= 10) {\n        minutes = `0${minutes}`;\n      }\n\n      if (seconds < 1) {\n        seconds = \"00\";\n      } else if (minutes >= 1 && minutes <= 10) {\n        seconds = `0${seconds}`;\n      }\n      // Output the result in an element with id=\"demo\"\n      document.getElementById(\"timer\").innerHTML =\n      minutes + seconds;\n    }, 1000);\n  }\n}\n\nmodule.exports = Timer;\n//     console.log(\"new timer\");\n//     this.seconds = 60;\n//     this.roundInterval;\n//\n//     this.decrementSeconds = this.decrementSeconds.bind(this);\n//     this.reset = this.reset.bind(this);\n//   }\n//\n//   start (allWordsGuessed, endRound) {\n//     this.roundInterval = setInterval( ()=> {\n//       if (this.seconds && allWordsGuessed) {\n//         this.decrementSeconds();\n//         $('#timer').text(`0:${this.seconds}`);\n//       } else {\n//         this.reset();\n//         endRound();\n//       }\n//     }, 1000);\n//   }\n//\n//   decrementSeconds() {\n//     this.seconds-- ;\n//   }\n//\n//   pause(){\n//     if (this.seconds) {\n//       clearInterval(this.roundInterval);\n//     }\n//   }\n//\n//   reset(){\n//     clearInterval(this.roundInterval);\n//     this.seconds = 60;\n//   }\n// }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/timer.js\n// module id = 35\n// module chunks = 0"],"sourceRoot":""}